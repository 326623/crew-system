* Introduction
  This project is dedicated to my rowing crew in school. Powered by Newjoy.

  This project rely hugely on *python3* and the *python-flask*. Read some of the introduction documentation to get started.

  http://flask.pocoo.org/

* Schedule
  
** backend
   1. WeiZhou
      负责编写member, training_record模块
      crew_api.API.apis.member, crew_api.API.apis.training_record

      - 成员模块
        
   2. QP
      负责编写数据库模块, 测试模块还有api中的user和training_plan模块
      crew_api.models, crew_api.tests.*, crew_api.API.apis.user, crew_api.API.apis.training_plan
   3. ZY
      None until <2018-02-13 二>

** frontend
   None planned until <2018-02-13 二>
* To join dev(尚未在windows或者macOS下进行测试.)
  我已经把环境包装好了,只需要安装[[https://www.vagrantup.com/][vagrant]]以及[[https://www.virtualbox.org/wiki/Downloads][virtualbox]],注意安装的时候要看清楚vagrant的版本是否兼容virtualbox. 如果ubuntu内核版本是4.13那么推荐直接从官网下载vagrant和virtualbox. 内核版本较低则可以(4.10, 4.4)直接apt-get install. 
** after installing vagrant and virtualbox
   打开命令行到repository下找到 *Vagrantfile*, 输入 *vagrant up* 整个环境就会自动配置. 大概时间根据网速,5~10分钟不等.

   配置完成之后使用 *vagrant ssh* 登录虚拟机. 虚拟机已经配置好了,在外面修改repo就会自动同步(shared)

   在登录的 *vagrant* 虚拟机里面输入

   #+BEGIN_EXAMPLE
   flask
   #+END_EXAMPLE

   可以查看flask已有的命令,下面是已经有的命令
   #+BEGIN_EXAMPLE
   Options:
  --version  Show the flask version
  --help     Show this message and exit.

  Commands:
    drop_db      Clean up database
    init_db      Initialize the Database, after drop_db
    insert_data  Insert template data
    rebuild      rebuild database with premade values
    run          Runs a development server.
    shell        Runs a shell in the app context.
    test         Runs the testing
   #+END_EXAMPLE
   
   运行 *flask rebuild* 重建数据库, 特别注意这个操作先删除数据库的表再建表,最后插入一些测试用的数据.在一开始的时候数据库是空的,要先执行这个命令才能正常运行(对于不同的磁盘会有不同的速度)

   *flask test* 是一些写好的单元测试

   *flask run --host=0.0.0.0* 会运行这个网页应用,然后打开浏览器输入url *localhost:5000*就可以看到现在的网页应用.

   有什么不懂可以直接问.

* DB-ER diagram
  [[file:doc/db-ER.png][ER图]]

* log

** 把mysql table变成sqlalchemy的模型
   利用sqlacodegen
